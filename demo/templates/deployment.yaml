apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.image.name }}
  labels: 
    app: {{ .Values.name }}
  
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports: 
        - containerPort: {{ .Values.service.targetPort }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
          
        readinessProbe:  
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.config.name }}
              key: dbhost
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.config.name | quote }}
              key: dbport
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.config.name }}
              key: dbname
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: dbuser
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: dbpassword
     